elasticsearch:
  enabled: true
  # image:
  #   # registry: docker.elastic.co
  #   # repository: docker.elastic.co/elasticsearch/elasticsearch
  #   tag: "7.17.3"
  replicas: 1
  minimumMasterNodes: 1
  antiAffinity: "soft"
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
  esJavaOpts: "-Xmx512m -Xms512m"
  resources:
    requests:
      cpu: "100m"
      memory: "1024M"
    limits:
      cpu: "1000m"
      memory: "1024M"
  volumeClaimTemplate:
    resources:
      requests:
        storage: 5Gi

neo4j:
  enabled: true
  nameOverride: neo4j
  neo4j:
    name: neo4j
    edition: "community"
    acceptLicenseAgreement: "yes"
    defaultDatabase: "graph.db"
    passwordFromSecret: neo4j-secrets
  # Set security context for pod
  securityContext:
    runAsNonRoot: true
    runAsUser: 7474
    runAsGroup: 7474
    fsGroup: 7474
    fsGroupChangePolicy: "Always"
  # Disallow privilegeEscalation on container level
  containerSecurityContext:
    allowPrivilegeEscalation: false
  volumes:
    data:
      mode: "defaultStorageClass"
      defaultStorageClass:
        requests:
          storage: 1Gi

  env:
    NEO4J_PLUGINS: '["apoc"]'

mysql:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/mysql
    tag: 8.0.32-debian-11-r26
  auth:
    existingSecret: mysql-secrets
  primary:
    extraFlags: "--character-set-server=utf8mb4 --collation-server=utf8mb4_bin"

kafka:
  enabled: false
